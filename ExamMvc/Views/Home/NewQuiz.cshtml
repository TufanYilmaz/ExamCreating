@model ExamMvc.Models.ViewModels.QuizViewModel
@{
    ViewData["Title"] = "Yeni Sınav";
}
@section Scripts{ 

<script>
//const { error } = require("jquery");

    $(document).ready(function () {
        $('#Quiz_RefUrl').change(function () {
            var URL = $(this).val();
            var title = $(this).find(":selected").text();
            $('#Quiz_RefTitle').val(title);
            console.log(title);
            $.ajax({
                url: "/Home/GetReferancedQuizContent/?URL="+URL,
                Cache: "false",
                type: "POST",
                dataType: "text",
                success: function (data, textStatus, XMLHttpRequest) {
                    $("#QuizContent").val(data);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Birşeyler yanlış gitti");
                    $("#QuizContent").val("Birşeyler yanlış gitti");
                }
            });
        });
    });
</script>
}
<form asp-action="AddQuiz">
    <div class="form-row">
        <div class="form-group col-lg-12">
            @Html.HiddenFor(m => m.Quiz.RefTitle)
            @Html.DropDownListFor(m => m.Quiz.RefUrl, 
            new SelectList(Model.QuizReferances, "Url", "Title"), 
            "Soru Kaynağı Seçiniz",
            new { @class = "form-control" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-lg-12">
            @Html.TextAreaFor(m => m.QuizContent, new { @class = "form-control" })
        </div>
    </div>

    @for (int i = 0; i < Model.Quiz.Questions.Count; i++)
    {
        @*@Html.Partial("Question", Model.Quiz.Questions[i])*@
        <div class="form-group row">
            <div class="col">
                @Html.LabelFor(m => m.Quiz.Questions[i].QuestionContent)
                @Html.TextBoxFor(m => m.Quiz.Questions[i].QuestionContent, new { @class = "form-control col-lg-12", placeholder = "Soru" })
            </div>
        </div>

        <div class="form-group row">
            @for (int j = 0; j < Model.Quiz.Questions[i].Answers.Count; j++)
            {
                @Html.HiddenFor(m => m.Quiz.Questions[i].Answers[j].AnswerLetter)
                @Html.TextBoxFor(m => m.Quiz.Questions[i].Answers[j].AnswerLetter, new { @class = "col-sm-1 col-form-label disabled", disabled = "disabled" })
                @Html.TextBoxFor(m => m.Quiz.Questions[i].Answers[j].AnswerContent, new { @class = "form-control col-lg-5 col-form-label" })
            }
            <div class="row col-lg-12 justify-content-center">
                @Html.DropDownListFor(m => m.Quiz.Questions[i].RightAnswerLetter,
               new SelectList(Model.Quiz.Questions[0].GetAnswerLetters(Model.Quiz.Questions[i].Answers.Count)),
               "Doğru Cevap Seç",
               new { @class = "form-control col-lg-4 align-self-center" })
            </div>
        </div>
            }
<div class="row justify-content-center">
    <button class="form-control col-lg-6 align-self-center">Sınav Oluştur</button>
</div>
</form>
